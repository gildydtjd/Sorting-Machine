{"version":3,"sources":["Components/input/constant.js","Components/input/Input.js","utils.js","Components/timer/constant.js","Components/timer/style.js","Components/timer/Timer.js","Components/result/index.js","App.js","reportWebVitals.js","index.js"],"names":["REG","Input","setNumArr","setTictoc","tictoc","useState","pushNum","setPushNum","className","onSubmit","e","preventDefault","parsedArr","split","filter","item","map","num","Number","length","some","alert","sortedArr","numArr","len","newArr","i","j","bubbleSort","setTimeout","type","onChange","target","value","placeholder","style","marginTop","KorWeek","EngWeek","EngMonth","containerStyle","display","justifyContent","alignItems","divStyle","width","padding","margin","border","Timer","Language","Date","time","setTime","getDayOfWeek","getDay","useEffect","setInterval","getHours","getMinutes","getSeconds","getMonth","getDate","getFullYear","Result","resultStr","join","App","reverse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ff0b87a.chunk.js","sourcesContent":["export const TIMES = 3;\n\nexport const REG = /\\s*(?:,|$)\\s*/; // 공백을 제거하며 , 기준으로 자를 수 있는 정규 표현식\n","import React, { useState } from \"react\";\nimport { bubbleSort } from \"../../utils\";\nimport { TIMES, REG } from \"./constant\";\nimport \"./input.css\";\n\nfunction Input({ setNumArr, setTictoc, tictoc }) {\n  const [pushNum, setPushNum] = useState(\"\");\n\n  const numChange = (e) => {\n    setPushNum(e.target.value);\n  };\n\n  const onReset = () => {\n    setPushNum(\"\");\n  };\n\n  const countThree = () => {\n    setTimeout(() => setTictoc((tictoc) => tictoc - TIMES), 1000 * TIMES);\n  };\n\n  const numClick = (e) => {\n    e.preventDefault();\n    const parsedArr = pushNum\n      .split(REG)\n      .filter((item) => item !== \"\") // 연속 콤마 제거\n      .map((num) => Number(num));\n    // 숫자가 들어오지 않는 경우와, 숫자가 아닌 경우의 NaN에 대한 예외처리\n    if (parsedArr.length === 0 || parsedArr.some((item) => item !== item)) {\n      alert(\"올바르지 않은 형식입니다.\");\n    } else {\n      const sortedArr = bubbleSort(parsedArr);\n      setNumArr([...sortedArr]);\n    }\n    setTictoc(TIMES);\n    onReset();\n    countThree();\n  };\n\n  return (\n    <div className=\"input-box\">\n      <div className=\"input-info\">\n        <form onSubmit={numClick}>\n          <input\n            type=\"text\"\n            onChange={numChange}\n            value={pushNum}\n            placeholder=\"숫자,숫자 형식으로 입력\"\n          ></input>\n          <div style={{ marginTop: \"20px\" }}>\n            <button>시작 버튼</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n","export function bubbleSort(numArr) {\n  const len = numArr.length;\n  const newArr = [...numArr];\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len; j++) {\n      if (newArr[i] < newArr[j]) {\n        [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n      }\n    }\n  }\n  return newArr;\n}\n\nexport function selectionSort(numArr) {\n  const len = numArr.length;\n  const newArr = [...numArr];\n\n  for (let i = 0; i < len - 1; i++) {\n    let minIdx = i;\n    for (let j = i + 1; j < len; j++) {\n      if (newArr[j] < newArr[minIdx]) {\n        minIdx = j;\n      }\n    }\n    if (i !== minIdx) {\n      [newArr[i], newArr[minIdx]] = [newArr[minIdx], newArr[i]];\n    }\n  }\n  return newArr;\n}\n\nexport function insertionSort(numArr) {\n  const len = numArr.length;\n  const newArr = [...numArr];\n  let idx = 0;\n\n  for (let i = 0; i < len; i++) {\n    idx = i;\n    while (newArr[idx] !== undefined && newArr[idx - 1] > newArr[idx]) {\n      [newArr[idx - 1], newArr[idx]] = [newArr[idx], newArr[idx - 1]];\n      idx--;\n    }\n  }\n  return newArr;\n}\n","export const KorWeek = [\n  \"일요일\",\n  \"월요일\",\n  \"화요일\",\n  \"수요일\",\n  \"목요일\",\n  \"금요일\",\n  \"토요일\",\n];\n\nexport const EngWeek = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nexport const EngMonth = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n","export const containerStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nexport const divStyle = {\n  width: \"100%\",\n  padding: \"20px\",\n  margin: \"20px 0px\",\n  border: \"1px solid #C9C9C9\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport { KorWeek, EngWeek, EngMonth } from \"./constant\";\nimport { containerStyle, divStyle } from \"./style\";\n\nfunction Timer({ Language }) {\n  const [time, setTime] = useState(new Date());\n\n  const TimeChange = () => {\n    setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n  };\n\n  function getDayOfWeek(Language) {\n    if (Language) {\n      return EngWeek[new Date().getDay()];\n    } else {\n      return KorWeek[new Date().getDay()];\n    }\n  }\n\n  function getEngMonth() {\n    return EngMonth[new Date().getMonth()];\n  }\n\n  useEffect(() => {\n    TimeChange();\n  }, []);\n\n  return (\n    <div style={containerStyle}>\n      {Language ? (\n        <div style={divStyle}>\n          <span>{time.getHours()}h</span> <span>{time.getMinutes()}m</span>\n          <span>{time.getSeconds()}s</span>\n          <span>{getEngMonth()}</span>\n          <span>{getDayOfWeek(Language)}</span> <span>{time.getDate()}</span>{\" \"}\n          <span>{time.getFullYear()}</span>\n        </div>\n      ) : (\n        <div style={divStyle}>\n          <span>{time.getFullYear()}년</span>\n          <span>{time.getMonth() + 1}월</span>\n          <span>{time.getDate()}일</span>\n          <span>{getDayOfWeek(Language)}</span>\n          <span>{time.getHours()}시</span> <span>{time.getMinutes()}분</span>\n          <span>{time.getSeconds()}초</span>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Timer;\n","import React from \"react\";\nimport \"./result.css\";\n\nfunction Result({ numArr }) {\n  const resultStr = numArr.join(\", \");\n  return (\n    <div className=\"result-box\">\n      <div className=\"result-info\">{resultStr}</div>\n    </div>\n  );\n}\n\nexport default Result;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Input from \"./Components/input/Input\";\nimport Timer from \"./Components/timer/Timer\";\nimport Result from \"./Components/result\";\n\nfunction App() {\n  const [numArr, setNumArr] = useState([]);\n  const [tictoc, setTictoc] = useState(3);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Timer />\n        <Input setNumArr={setNumArr} setTictoc={setTictoc} tictoc={tictoc} />\n        <Result numArr={numArr} />\n        {tictoc === 0 && <Result numArr={[...numArr].reverse()} />}\n        <Timer Language />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}